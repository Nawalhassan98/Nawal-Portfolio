{"version":3,"file":"static/js/21.7e38faef.chunk.js","mappings":"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","sources":["components/UI/Button.js","webpack://mywebsitee/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","components/UI/ErrorModal.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","routes/Form.js","routes/Contact.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport \"./Button.css\"\n\n\nfunction Button(props){\n\nconst [isMouseOver, setMouseOver]= useState(false);\n\nfunction checkMouseOver(){\n    setMouseOver(true);\n}\n\nfunction checkMouseOut(){\n setMouseOver(false);\n}\n  return (\n    <div style={{display:'flex', justifyContent:\"center\"}}>\n    <button className=\"button\" style={{backgroundColor: isMouseOver? \"aliceblue\": \"#9370DB\" }}\n    onMouseOver={checkMouseOver}\n    onMouseOut={checkMouseOut}\n    >\n     {props.children}\n    </button>\n    </div>\n  )\n\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import React from \"react\";\nimport classes from './Card.module.css';\n\nfunction Card(props){\n \n    return <div className={`${classes.card} ${props.cssClass}`} >{props.children} </div>\n}\n\nexport default Card;\n\n","import React from \"react\";\nimport Button from \"./Button\"\nimport Card from \"./Card\"\nimport \"./ErrorModal.css\"\n\nfunction ErrorModal(props){\n    return (\n       <div className=\"backdrop\" onClick={props.onConfirm}>\n        <Card className=\"modal\">\n            <header className=\"header\">\n                <h2>{props.title}</h2>\n            </header>\n            <div className=\"content\">\n                <p>{props.msg}</p>\n            </div>\n            <footer className=\"actions\">\n               <Button onClick={props.onConfirm}>Okay</Button>\n            </footer>\n       </Card>\n       \n      </div>\n    )\n}\n\nexport default ErrorModal;","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React,{useState, useRef} from \"react\";\nimport \"./pagesstyles/Form.css\"\nimport Button from \"../components/UI/Button\";\nimport ErrorModal from \"../components/UI/ErrorModal\";\nimport \"./pagesstyles/Form.css\"\nimport emailjs from '@emailjs/browser';\n\n\nfunction Form(){\n\nconst form = useRef();  /*Using to send form data to email*/ \n\n  const [enteredName, setEnteredName]= useState('');\n  const [enteredEmail, setEnteredEmail]= useState('');\n  const [enteredSubject, setEnteredSubject]= useState('');\n  const [enteredMsg, setEnteredMsg]= useState('');\n  const [error, setError]=useState();\n\n\n    function submitform(event){\n        event.preventDefault();\n        if(enteredName.trim().length===0 || enteredEmail.trim().length===0 ||\n        enteredSubject.trim().length===0){\n            setError({\n                title:\"Invalid Input\",\n                msg: \"Please enter valid data (non-empty values)\"\n            });\n            return;\n        }\n        setEnteredName('');   /*After submitting form all the fields should be emptied*/\n        setEnteredEmail('');\n        setEnteredSubject('');\n        setEnteredMsg('');\n        \n      \n        /* Sending Form data to Email */\n\n    emailjs.sendForm('service_NH', 'template_q6vu1qk', form.current, '0gsHauKqj0nSvDVZ8')\n      .then((result) => {\n          alert(\"Message sent successfully!\");\n          console.log(result.text);\n          console.log(\"message sent\");\n      }, (error) => {\n          console.log(error.text);\n      });\n\n    }\n\n  \n    function nameChangeHandler(event){\n      setEnteredName(event.target.value);\n    }\n    function emailChangeHandler(event){\n        setEnteredEmail(event.target.value);\n      }\n    function subjectChangeHandler(event){\n        setEnteredSubject(event.target.value);\n      }\n\n    function msgChangeHandler(event){\n        setEnteredMsg(event.target.value);\n      }\n\n    function errorHandler(){\n         setError(null);\n    }\n\n    return (\n        <div>\n        {error && <ErrorModal title={error.title} msg={error.msg} onConfirm={errorHandler}/>}\n           <form ref={form} onSubmit={submitform}>\n            <label>Full Name *</label>\n             <input type=\"text\" name=\"user_name\" value={enteredName} onChange={nameChangeHandler}></input>\n            <label >Email *</label>\n            <input type=\"email\" name=\"user_email\" value={enteredEmail} onChange={emailChangeHandler}></input>\n            <label>Subject *</label>\n            <input type=\"text\" name=\"subject\" value={enteredSubject} onChange={subjectChangeHandler}></input>\n            <label>Message</label>\n            <textarea rows=\"6\" name=\"message\" type=\"text\" value={enteredMsg} onChange={msgChangeHandler} placeholder=\"Type your message here\"/>\n            <Button className=\"btn\" onClick={submitform}>Submit</Button>\n           </form> \n          \n        </div>\n    )\n\n}\n\n\nexport default Form;","import React from \"react\";\nimport Navbar from \"../components/Navbar\"\nimport Form from \"./Form\"\nimport Footer from \"../components/Footer\"\nimport \"./pagesstyles/contact.css\"\n\nfunction Contact(){\n   \n    return (\n        <div>\n        <Navbar/>\n        <div className=\"circle\">\n        <div className=\"headingcontact\">\n         <h1>Contact Me</h1>\n         <p> Looking Forward to hearing from you!</p>\n         <h2>Email: </h2>\n         <h3>nawalhassan890@gmail.com</h3>\n        </div>\n        </div>\n        <Form />\n        <Footer/>\n        </div>\n    )\n    \n}\n\nexport default Contact;"],"names":["props","useState","isMouseOver","setMouseOver","style","display","justifyContent","className","backgroundColor","onMouseOver","onMouseOut","children","classes","cssClass","onClick","onConfirm","title","msg","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredSubject","setEnteredSubject","enteredMsg","setEnteredMsg","error","setError","submitform","event","preventDefault","trim","length","emailjs","current","then","result","alert","console","log","ref","onSubmit","type","name","value","onChange","rows","placeholder","Navbar","Footer"],"sourceRoot":""}